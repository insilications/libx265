mkdir -p 8bit 10bit 12bit

cd 12bit
cmake ../../source -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX=/usr -DLIB_SUFFIX=64 -DCMAKE_AR=/usr/bin/gcc-ar -DCMAKE_NM=/usr/bin/gcc-nm -DCMAKE_RANLIB=/usr/bin/gcc-ranlib -DLIB_INSTALL_DIR=lib64 -DNATIVE_BUILD=ON -DSTATIC_LINK_CRT=ON -DBUILD_STATIC_LIBS=ON -DENABLE_SHARED=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DENABLE_DOCS=OFF -DENABLE_ASSEMBLY=ON -DENABLE_NASM=ON -DENABLE_PIC=ON -DENABLE_LIBNUMA=OFF -DENABLE_LIBNUMA=OFF -DEXPORT_C_API=OFF -DENABLE_CLI=OFF -DMAIN12=ON -DHIGH_BIT_DEPTH=ON
make -j16

cd ../10bit
cmake ../../source -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX=/usr -DLIB_SUFFIX=64 -DCMAKE_AR=/usr/bin/gcc-ar -DCMAKE_NM=/usr/bin/gcc-nm -DCMAKE_RANLIB=/usr/bin/gcc-ranlib -DLIB_INSTALL_DIR=lib64 -DNATIVE_BUILD=ON -DSTATIC_LINK_CRT=ON -DBUILD_STATIC_LIBS=ON -DENABLE_SHARED=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DENABLE_DOCS=OFF -DENABLE_ASSEMBLY=ON -DENABLE_NASM=ON -DENABLE_PIC=ON -DENABLE_LIBNUMA=OFF -DEXPORT_C_API=OFF -DENABLE_CLI=OFF -DHIGH_BIT_DEPTH=ON
make -j16

cd ../8bit
cp -f ../10bit/libx265.a libx265_main10.a
cp -f ../12bit/libx265.a libx265_main12.a
cmake ../../source -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX=/usr -DLIB_SUFFIX=64 -DCMAKE_AR=/usr/bin/gcc-ar -DCMAKE_NM=/usr/bin/gcc-nm -DCMAKE_RANLIB=/usr/bin/gcc-ranlib -DLIB_INSTALL_DIR=lib64 -DNATIVE_BUILD=ON -DSTATIC_LINK_CRT=ON -DBUILD_STATIC_LIBS=ON -DENABLE_SHARED=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DENABLE_DOCS=OFF -DENABLE_ASSEMBLY=ON -DENABLE_NASM=ON -DENABLE_PIC=ON -DENABLE_LIBNUMA=OFF -DHIGH_BIT_DEPTH=ON -DENABLE_HDR10_PLUS=ON -DENABLE_TESTS=ON -DENABLE_CLI=ON -DEXTRA_LIB="x265_main10.a;x265_main12.a" -DEXTRA_LINK_FLAGS="-L. -L/usr/lib64" -DLINKED_10BIT=ON -DLINKED_12BIT=ON
make -j16

# rename the 8bit library, then combine all three into libx265.a
mv libx265.a libx265_main.a
# On Linux, we use GNU ar to combine the static libraries together
gcc-ar -M <<EOF
CREATE libx265.a
ADDLIB libx265_main.a
ADDLIB libx265_main10.a
ADDLIB libx265_main12.a
SAVE
END
EOF 
#
